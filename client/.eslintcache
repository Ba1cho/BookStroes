[{"C:\\OSPanel\\domains\\book\\client\\src\\index.js":"1","C:\\OSPanel\\domains\\book\\client\\src\\App.js":"2","C:\\OSPanel\\domains\\book\\client\\src\\store\\UserStore.js":"3","C:\\OSPanel\\domains\\book\\client\\src\\store\\DeviceStore.js":"4","C:\\OSPanel\\domains\\book\\client\\src\\components\\AppRouter.js":"5","C:\\OSPanel\\domains\\book\\client\\src\\components\\NavBar.js":"6","C:\\OSPanel\\domains\\book\\client\\src\\http\\userAPI.js":"7","C:\\OSPanel\\domains\\book\\client\\src\\routes.js":"8","C:\\OSPanel\\domains\\book\\client\\src\\http\\index.js":"9","C:\\OSPanel\\domains\\book\\client\\src\\utils\\consts.js":"10","C:\\OSPanel\\domains\\book\\client\\src\\pages\\Admin.js":"11","C:\\OSPanel\\domains\\book\\client\\src\\pages\\DevicePage.js":"12","C:\\OSPanel\\domains\\book\\client\\src\\pages\\Basket.js":"13","C:\\OSPanel\\domains\\book\\client\\src\\pages\\Shop.js":"14","C:\\OSPanel\\domains\\book\\client\\src\\pages\\Auth.js":"15","C:\\OSPanel\\domains\\book\\client\\src\\http\\deviceAPI.js":"16","C:\\OSPanel\\domains\\book\\client\\src\\components\\modals\\CreateType.js":"17","C:\\OSPanel\\domains\\book\\client\\src\\components\\modals\\CreateDevice.js":"18","C:\\OSPanel\\domains\\book\\client\\src\\components\\modals\\CreateBrand.js":"19","C:\\OSPanel\\domains\\book\\client\\src\\components\\Pages.js":"20","C:\\OSPanel\\domains\\book\\client\\src\\components\\DeviceList.js":"21","C:\\OSPanel\\domains\\book\\client\\src\\components\\BrandBar.js":"22","C:\\OSPanel\\domains\\book\\client\\src\\components\\TypeBar.js":"23","C:\\OSPanel\\domains\\book\\client\\src\\components\\DeviceItem.js":"24"},{"size":439,"mtime":1611985807000,"results":"25","hashOfConfig":"26"},{"size":860,"mtime":1611985807000,"results":"27","hashOfConfig":"26"},{"size":401,"mtime":1611985807000,"results":"28","hashOfConfig":"26"},{"size":1298,"mtime":1611985807000,"results":"29","hashOfConfig":"26"},{"size":795,"mtime":1611985807000,"results":"30","hashOfConfig":"26"},{"size":1844,"mtime":1702476635104,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1702476594770,"results":"32","hashOfConfig":"26"},{"size":774,"mtime":1611985807000,"results":"33","hashOfConfig":"26"},{"size":407,"mtime":1611985807000,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1611985807000,"results":"35","hashOfConfig":"26"},{"size":1543,"mtime":1702476466244,"results":"36","hashOfConfig":"26"},{"size":2229,"mtime":1611985807000,"results":"37","hashOfConfig":"26"},{"size":146,"mtime":1611985807000,"results":"38","hashOfConfig":"26"},{"size":1538,"mtime":1611985807000,"results":"39","hashOfConfig":"26"},{"size":3142,"mtime":1611985807000,"results":"40","hashOfConfig":"26"},{"size":995,"mtime":1611985807000,"results":"41","hashOfConfig":"26"},{"size":1355,"mtime":1611985807000,"results":"42","hashOfConfig":"26"},{"size":6090,"mtime":1702666009310,"results":"43","hashOfConfig":"26"},{"size":1372,"mtime":1611985807000,"results":"44","hashOfConfig":"26"},{"size":801,"mtime":1611985807000,"results":"45","hashOfConfig":"26"},{"size":491,"mtime":1611985807000,"results":"46","hashOfConfig":"26"},{"size":759,"mtime":1611985807000,"results":"47","hashOfConfig":"26"},{"size":752,"mtime":1611985807000,"results":"48","hashOfConfig":"26"},{"size":1090,"mtime":1611985807000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"29ccg5",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\OSPanel\\domains\\book\\client\\src\\index.js",[],["106","107"],"C:\\OSPanel\\domains\\book\\client\\src\\App.js",["108"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\OSPanel\\domains\\book\\client\\src\\store\\UserStore.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\store\\DeviceStore.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\components\\AppRouter.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\components\\NavBar.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\http\\userAPI.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\routes.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\http\\index.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\utils\\consts.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\pages\\Admin.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\pages\\DevicePage.js",["109"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneDevice} from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{device.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {device.rating}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {device.price} руб.</h3>\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;\n","C:\\OSPanel\\domains\\book\\client\\src\\pages\\Basket.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\pages\\Shop.js",["110","111"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","C:\\OSPanel\\domains\\book\\client\\src\\pages\\Auth.js",["112"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\OSPanel\\domains\\book\\client\\src\\http\\deviceAPI.js",["113"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","C:\\OSPanel\\domains\\book\\client\\src\\components\\modals\\CreateType.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\components\\modals\\CreateDevice.js",["114","115"],"C:\\OSPanel\\domains\\book\\client\\src\\components\\modals\\CreateBrand.js",["116"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","C:\\OSPanel\\domains\\book\\client\\src\\components\\Pages.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\components\\DeviceList.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\components\\BrandBar.js",[],"C:\\OSPanel\\domains\\book\\client\\src\\components\\TypeBar.js",["117"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","C:\\OSPanel\\domains\\book\\client\\src\\components\\DeviceItem.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":19,"column":8,"nodeType":"124","endLine":19,"endColumn":10,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":12,"column":8,"nodeType":"124","endLine":12,"endColumn":10,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":23,"column":8,"nodeType":"124","endLine":23,"endColumn":10,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"128","line":30,"column":8,"nodeType":"124","endLine":30,"endColumn":65,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":26,"column":17,"nodeType":"133","messageId":"134","endLine":26,"endColumn":21},{"ruleId":"131","severity":1,"message":"135","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":18},{"ruleId":"131","severity":1,"message":"136","line":5,"column":36,"nodeType":"133","messageId":"134","endLine":5,"endColumn":48},{"ruleId":"122","severity":1,"message":"128","line":18,"column":8,"nodeType":"124","endLine":18,"endColumn":10,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"138","line":4,"column":22,"nodeType":"133","messageId":"134","endLine":4,"endColumn":32},{"ruleId":"131","severity":1,"message":"139","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":11},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["142"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["144"],["145"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'jwt_decode' is defined but never used.","'fetchDevices' is defined but never used.",["146"],"'createType' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"151","fix":"155"},"Update the dependencies array to be: [user]",{"range":"156","text":"157"},"Update the dependencies array to be: [id]",{"range":"158","text":"159"},"Update the dependencies array to be: [device]",{"range":"160","text":"161"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"162","text":"163"},{"range":"164","text":"161"},[641,643],"[user]",[457,459],"[id]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]